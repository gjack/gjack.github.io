{"version":3,"file":"component---src-templates-categories-js-6df542c32b319be2db61.js","mappings":"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","sources":["webpack://gabijack/./src/components/categories_list.js","webpack://gabijack/./src/components/tags_list.js","webpack://gabijack/./src/templates/categories.js","webpack://gabijack/./src/images/log-management-fundamentals.png"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Grid, Box } from \"theme-ui\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { kebabCase } from \"lodash\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFolderOpen } from \"@fortawesome/free-solid-svg-icons\"\n\nconst CategoriesList = () => {\n  const { allMdx } = useStaticQuery(graphql`\n    {\n      allMdx {\n        group(field: frontmatter___categories) {\n          totalCount\n          fieldValue\n        }\n      }\n    }\n  `)\n  const categories = allMdx.group\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#328cc1\",\n        p: \"1rem\",\n        borderRadius: \"0.5rem\",\n        my: \"2rem\",\n      }}\n    >\n      <h3>\n        <FontAwesomeIcon\n          icon={faFolderOpen}\n          size={\"lg\"}\n          sx={{ mx: \"0.5rem\" }}\n        />\n        Categories\n      </h3>\n      <ul\n        sx={{\n          listStyle: \"none\",\n          m: 0,\n          px: 2,\n          py: 3,\n        }}\n      >\n        <Grid gap={3} columns={[2, null, 2]}>\n          {categories.map((category) => (\n            <Box\n              key={category.fieldValue}\n              sx={{\n                textAlign: \"center\",\n                padding: \"0\",\n              }}\n            >\n              <li key={category.fieldValue}>\n                <Link\n                  to={`/categories/${kebabCase(category.fieldValue)}/`}\n                  key={category.fieldValue}\n                  sx={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"#1d2731\",\n                    \":visited\": { color: \"#1d2731\" },\n                    \":hover\": { color: \"#d9b310\" },\n                  }}\n                >\n                  {category.fieldValue}\n                </Link>\n              </li>\n            </Box>\n          ))}\n        </Grid>\n      </ul>\n    </Box>\n  )\n}\n\nexport default CategoriesList\n","/** @jsx jsx */\nimport { jsx, Grid, Box } from \"theme-ui\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { kebabCase } from \"lodash\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\"\n\nconst TagsList = () => {\n  const { allMdx } = useStaticQuery(graphql`\n    {\n      allMdx {\n        group(field: frontmatter___tags) {\n          totalCount\n          fieldValue\n        }\n      }\n    }\n  `)\n  const tags = allMdx.group\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#328cc1\",\n        p: \"1rem\",\n        borderRadius: \"0.5rem\",\n        my: \"2rem\",\n      }}\n    >\n      <h3>\n        <FontAwesomeIcon icon={faTags} size={\"lg\"} sx={{ mx: \"0.5rem\" }} />\n        Tags\n      </h3>\n      <ul\n        sx={{\n          listStyle: \"none\",\n          m: 0,\n          px: 2,\n          py: 3,\n        }}\n      >\n        <Grid gap={3} columns={[2, null, 2]}>\n          {tags.map((tag) => (\n            <Box\n              key={tag.fieldValue}\n              sx={{\n                textAlign: \"center\",\n                padding: \"0\",\n              }}\n            >\n              <li key={tag.fieldValue}>\n                <Link\n                  to={`/tags/${kebabCase(tag.fieldValue)}/`}\n                  key={tag.fieldValue}\n                  sx={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"#1d2731\",\n                    \":visited\": { color: \"#1d2731\" },\n                    \":hover\": { color: \"#d9b310\" },\n                  }}\n                >\n                  {tag.fieldValue}\n                </Link>\n              </li>\n            </Box>\n          ))}\n        </Grid>\n      </ul>\n    </Box>\n  )\n}\n\nexport default TagsList\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { graphql, Link } from \"gatsby\"\nimport { Themed } from \"@theme-ui/mdx\"\nimport { Image } from \"theme-ui\"\nimport LogsBadge from \"../images/log-management-fundamentals.png\"\nimport CategoriesList from \"../components/categories_list\"\nimport TagsList from \"../components/tags_list\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faClock, faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\"\n\n// Components\n\nconst Categories = ({ pageContext, data }) => {\n  const { category } = pageContext\n  const { edges } = data.allMdx\n\n  const pageTitle = `Category:${category}`\n\n  return (\n    <Layout>\n      <Seo title={pageTitle} />\n      <main\n        sx={{\n          display: \"grid\",\n          gridGap: 4,\n          gridTemplateColumns: [\"auto\", \"1fr 256px\"],\n        }}\n      >\n        <div sx={{ textAlign: \"justify\" }}>\n          <Themed.h2\n            sx={{ px: 3 }}\n          >{`Posts in category ${category}`}</Themed.h2>\n          <ul\n            sx={{\n              listStyle: \"none\",\n              m: 0,\n              px: 3,\n              py: 4,\n            }}\n          >\n            {edges.map(({ node }) => (\n              <li\n                key={node.id}\n                sx={{\n                  mb: 4,\n                }}\n              >\n                <Themed.h3\n                  sx={{\n                    m: 0,\n                  }}\n                >\n                  <Link\n                    to={`/blog/${node.slug}`}\n                    key={node.id}\n                    sx={{\n                      color: \"inherit\",\n                      textDecoration: \"none\",\n                      \":hover,:focus\": {\n                        color: \"#d9b310\",\n                      },\n                    }}\n                  >\n                    {node.frontmatter.title}\n                  </Link>\n                </Themed.h3>\n                <div sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                  <small sx={{ fontWeight: \"bold\" }}>\n                    <FontAwesomeIcon icon={faCalendarAlt} />\n                    <span sx={{ mx: \"0.5rem\" }}>{node.frontmatter.date}</span>\n                  </small>\n                  <small>\n                    <FontAwesomeIcon icon={faClock} />\n                    <span sx={{ mx: \"0.5rem\" }}>{`${node.timeToRead} ${\n                      node.timeToRead === 1 ? \"minute\" : \"minutes\"\n                    }`}</span>\n                  </small>\n                </div>\n                <Themed.p>{node.excerpt}</Themed.p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <aside>\n          <CategoriesList />\n          <TagsList />\n          <a href=\"https://www.credly.com/badges/c654ccd6-00e5-4417-bbc2-06ef46429db4/public_url\">\n            <Image\n            src={LogsBadge}\n            alt={\"Datadog Logs Management Badge\"}\n            sx={{\n              padding: \"5px\",\n              marginTop: \"3rem\",\n            }}\n            />\n        </a>\n        </aside>\n      </main>\n    </Layout>\n  )\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query ($category: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { draft: { eq: false }, categories: { in: [$category] } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          slug\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          timeToRead\n          excerpt(truncate: true, pruneLength: 150)\n        }\n      }\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/log-management-fundamentals-4038f7d60b7d64497e61f5b3a0319ae0.png\";"],"names":["categories","useStaticQuery","allMdx","group","sx","backgroundColor","p","borderRadius","my","icon","faFolderOpen","size","mx","listStyle","m","px","py","gap","columns","map","category","key","fieldValue","textAlign","padding","Link","to","textDecoration","fontWeight","color","tags","faTags","tag","pageContext","data","edges","pageTitle","title","display","gridGap","gridTemplateColumns","node","id","mb","slug","frontmatter","flexDirection","faCalendarAlt","date","faClock","timeToRead","excerpt","href","src","LogsBadge","alt","marginTop"],"sourceRoot":""}