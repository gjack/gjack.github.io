{
    "componentChunkName": "component---src-pages-blog-mdx-slug-js",
    "path": "/blog/the-code-we-write-today/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"The code we write today","tags":["programming"],"categories":[],"date":"February 04, 2022","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/0f38ac824615f50acc2f29a4960a078f/6fc41/woman-gd0e7e2913_1280.jpg","srcSet":"/static/0f38ac824615f50acc2f29a4960a078f/f2b8e/woman-gd0e7e2913_1280.jpg 320w,\n/static/0f38ac824615f50acc2f29a4960a078f/e9f46/woman-gd0e7e2913_1280.jpg 640w,\n/static/0f38ac824615f50acc2f29a4960a078f/6fc41/woman-gd0e7e2913_1280.jpg 1280w","sizes":"(min-width: 1280px) 1280px, 100vw"},"sources":[{"srcSet":"/static/0f38ac824615f50acc2f29a4960a078f/4c116/woman-gd0e7e2913_1280.webp 320w,\n/static/0f38ac824615f50acc2f29a4960a078f/0d409/woman-gd0e7e2913_1280.webp 640w,\n/static/0f38ac824615f50acc2f29a4960a078f/2c2a6/woman-gd0e7e2913_1280.webp 1280w","type":"image/webp","sizes":"(min-width: 1280px) 1280px, 100vw"}]},"width":1280,"height":428}}},"imageAlt":"The code we write today"},"id":"08584458-be98-53c2-8cf3-9fa51060e04b","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The code we write today\",\n  \"date\": \"2022-02-04T00:00:00.000Z\",\n  \"tags\": [\"programming\"],\n  \"categories\": [],\n  \"draft\": false,\n  \"image\": \"./woman-gd0e7e2913_1280.jpg\",\n  \"imageAlt\": \"The code we write today\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Recently, I was tasked with making updates to an existing integration with a third party.\\nAlthough in the beginning the change sounded very straightforward, I soon realized it would be a lot more complex than I thought and a mild exercise in frustration.\\nAs it turns out, it involved more than just updating our use of their API.\\nIt required some knowledge of their internal edge cases, as well as the agreements and decisions made in the past that, unfortunately, weren't documented anywhere and not communicated by the API. \"), mdx(\"p\", null, \"While it may sound like I was simply unlucky, I've come to realize that this is something that happens rather frequently.\\nWhile working on a new feature, decisions are made based on current limitations or requirements.\\nWe choose to pin to a version of a library or gem, because a more recent one would cause trouble with another dependency.\\nOur code was written in a certain way because it made sense at the moment.\\nIt was supposed to meet the needs that existed at the time, with the resources and knowledge we possesed.\\nThis is all perfectly fine, but it can turn into a problem when we forget to write down why or, at the very least, leave a few breadcrumbs here and there for future us to more easily figure out our intentions and motivations at the moment. \"), mdx(\"p\", null, \"I know very well that it would be impossible and unreasonable to attempt to write formal documentation for every single change we make to the codebase.\\nEven when formal documentation of a feature does exist, it usually covers how it works, but not why it came to work that way. It does not explain the decisions or limitations that took us from point A to point B, and how those previous decisions would affect our ability to get to point C, should the need arise.\"), mdx(\"p\", null, \"Ruby developers are usually discouraged from writing comments in our code, so I don't expect to find a lot of information in the code itself.\\nVery often, while fixing a bug or tracking down an issue, I like to search the history of commits and pull requests surounding the code I'm interested in.\\nI seek to understand the reasons behind the change. I consider myself truly lucky when the commit messages are as clear and detailed as possible and the pull request includes a full description of the changes being made and the motivations behind them.\\nMore often than not, however, there's none. This frustrates me tremendously.\"), mdx(\"p\", null, \"A lot has been written about the benefits of good commit messages.\\nThey certainly make life easier for those reviewing your pull request, but they also prove invaluable for those digging in the past while making changes.\\nPlease, if only as a favor to your future self, avoid ever writing short, vague commit messages, such as \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"some changes\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"stuff\"), \".\\nAs much as possible, try to make atomic commits with meaningful messages. This is something I must admit I still struggle with.\\nIt is sometimes very tempting to make a single commit including changes to ten different files, rather than breaking things down in smaller commits that tell a story, but a little extra effort comes a long way.\\nThis is also why I'm not a real fan of squashing several commits together and erasing history in the process.\"), mdx(\"p\", null, \"If your team relies on code review and you submit pull requests through Github or any other similar version control, make sure you write thorough descriptions for them.\\nTry to include as much context and detail as you can. If you know of any limitations or caveats to the changes you're making, document them there too.\\nProvide examples of use, links to additional documentation, and screen shots, when applicable.\\nBonus points for updating the description as you incorporate suggestions from your reviewers.\\nRemember, it may seem like tedious extra work but your future self and all those having to maintain your code will thank you for it.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":3,"slug":"the-code-we-write-today/"},"allMdx":{"edges":[{"next":{"slug":"2013-03-17-silicon-valley-devfest/","frontmatter":{"title":"Silicon Valley DevFest"},"id":"edcdad98-0f1c-5f08-b9bf-ef2584a6784d"},"previous":null,"node":{"id":"3378703f-653c-58fd-a11e-7adc675fb79e","frontmatter":{"title":"Makings of a Pythonista"},"slug":"2012-11-21-makings-of-a-pythonista"}},{"next":{"slug":"2015-06-14-in-search-of-a-faster-query","frontmatter":{"title":"In search of a faster query"},"id":"c6497654-5ee0-5b14-b735-e08bbbc6a4bf"},"previous":{"frontmatter":{"title":"Makings of a Pythonista"},"slug":"2012-11-21-makings-of-a-pythonista"},"node":{"id":"edcdad98-0f1c-5f08-b9bf-ef2584a6784d","frontmatter":{"title":"Silicon Valley DevFest"},"slug":"2013-03-17-silicon-valley-devfest/"}},{"next":{"slug":"2015-11-01-diary-of-a-dev-joys-of-building","frontmatter":{"title":"Diary of a Junior Dev: The joys of building"},"id":"ca6c84a6-3aea-5278-bf26-267d43acb227"},"previous":{"frontmatter":{"title":"Silicon Valley DevFest"},"slug":"2013-03-17-silicon-valley-devfest/"},"node":{"id":"c6497654-5ee0-5b14-b735-e08bbbc6a4bf","frontmatter":{"title":"In search of a faster query"},"slug":"2015-06-14-in-search-of-a-faster-query"}},{"next":{"slug":"2016-12-24-working-with-d3-based-chart-library/","frontmatter":{"title":"TIL: Working with a D3 based chart library"},"id":"776dcc9f-2ac4-511a-a9c6-982c226e0478"},"previous":{"frontmatter":{"title":"In search of a faster query"},"slug":"2015-06-14-in-search-of-a-faster-query"},"node":{"id":"ca6c84a6-3aea-5278-bf26-267d43acb227","frontmatter":{"title":"Diary of a Junior Dev: The joys of building"},"slug":"2015-11-01-diary-of-a-dev-joys-of-building"}},{"next":{"slug":"2017-03-15-react-conf-2017/","frontmatter":{"title":"React Conf 2017"},"id":"97c0196c-f0cd-5d6a-b2b9-fd3c6f1f1baa"},"previous":{"frontmatter":{"title":"Diary of a Junior Dev: The joys of building"},"slug":"2015-11-01-diary-of-a-dev-joys-of-building"},"node":{"id":"776dcc9f-2ac4-511a-a9c6-982c226e0478","frontmatter":{"title":"TIL: Working with a D3 based chart library"},"slug":"2016-12-24-working-with-d3-based-chart-library/"}},{"next":{"slug":"2017-04-12-the-initial-state-gotcha","frontmatter":{"title":"The Initial State Gotcha"},"id":"82041731-cb81-571d-958c-00f57d99b927"},"previous":{"frontmatter":{"title":"TIL: Working with a D3 based chart library"},"slug":"2016-12-24-working-with-d3-based-chart-library/"},"node":{"id":"97c0196c-f0cd-5d6a-b2b9-fd3c6f1f1baa","frontmatter":{"title":"React Conf 2017"},"slug":"2017-03-15-react-conf-2017/"}},{"next":{"slug":"2017-05-13-blue-socks-at-orange/","frontmatter":{"title":"Blue Socks Spotted at Orange"},"id":"893cf729-88c0-5706-bcb8-d14f75a30f2b"},"previous":{"frontmatter":{"title":"React Conf 2017"},"slug":"2017-03-15-react-conf-2017/"},"node":{"id":"82041731-cb81-571d-958c-00f57d99b927","frontmatter":{"title":"The Initial State Gotcha"},"slug":"2017-04-12-the-initial-state-gotcha"}},{"next":{"slug":"learning-gatsby/","frontmatter":{"title":"Learning about Gatsby"},"id":"9a370e4e-c279-5fe6-bd67-96e83d07e388"},"previous":{"frontmatter":{"title":"The Initial State Gotcha"},"slug":"2017-04-12-the-initial-state-gotcha"},"node":{"id":"893cf729-88c0-5706-bcb8-d14f75a30f2b","frontmatter":{"title":"Blue Socks Spotted at Orange"},"slug":"2017-05-13-blue-socks-at-orange/"}},{"next":{"slug":"once-upon-a-blog/","frontmatter":{"title":"Once upon a Blog"},"id":"db5caf55-934b-5de1-aa6b-5a2078e4f869"},"previous":{"frontmatter":{"title":"Blue Socks Spotted at Orange"},"slug":"2017-05-13-blue-socks-at-orange/"},"node":{"id":"9a370e4e-c279-5fe6-bd67-96e83d07e388","frontmatter":{"title":"Learning about Gatsby"},"slug":"learning-gatsby/"}},{"next":{"slug":"story-of-a-laptop-upgrade","frontmatter":{"title":"Story of a laptop upgrade"},"id":"91dabe95-0227-5d01-b1d1-f10959c5d43a"},"previous":{"frontmatter":{"title":"Learning about Gatsby"},"slug":"learning-gatsby/"},"node":{"id":"db5caf55-934b-5de1-aa6b-5a2078e4f869","frontmatter":{"title":"Once upon a Blog"},"slug":"once-upon-a-blog/"}},{"next":{"slug":"the-code-we-write-today/","frontmatter":{"title":"The code we write today"},"id":"08584458-be98-53c2-8cf3-9fa51060e04b"},"previous":{"frontmatter":{"title":"Once upon a Blog"},"slug":"once-upon-a-blog/"},"node":{"id":"91dabe95-0227-5d01-b1d1-f10959c5d43a","frontmatter":{"title":"Story of a laptop upgrade"},"slug":"story-of-a-laptop-upgrade"}},{"next":{"slug":"rails-on-docker/","frontmatter":{"title":"Rails on Docker"},"id":"5e92911a-24f7-562d-8ecd-9a7391960489"},"previous":{"frontmatter":{"title":"Story of a laptop upgrade"},"slug":"story-of-a-laptop-upgrade"},"node":{"id":"08584458-be98-53c2-8cf3-9fa51060e04b","frontmatter":{"title":"The code we write today"},"slug":"the-code-we-write-today/"}},{"next":{"slug":"rails-on-docker-part-two/","frontmatter":{"title":"Rails on Docker Part Two"},"id":"534e725d-71be-5e6f-ace7-75db51185701"},"previous":{"frontmatter":{"title":"The code we write today"},"slug":"the-code-we-write-today/"},"node":{"id":"5e92911a-24f7-562d-8ecd-9a7391960489","frontmatter":{"title":"Rails on Docker"},"slug":"rails-on-docker/"}},{"next":null,"previous":{"frontmatter":{"title":"Rails on Docker"},"slug":"rails-on-docker/"},"node":{"id":"534e725d-71be-5e6f-ace7-75db51185701","frontmatter":{"title":"Rails on Docker Part Two"},"slug":"rails-on-docker-part-two/"}}]}},"pageContext":{"id":"08584458-be98-53c2-8cf3-9fa51060e04b","slug":"the-code-we-write-today/","__params":{"slug":"the-code-we-write-today"}}},
    "staticQueryHashes": ["2201243204","2744905544"]}