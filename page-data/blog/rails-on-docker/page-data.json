{
    "componentChunkName": "component---src-pages-blog-mdx-slug-js",
    "path": "/blog/rails-on-docker/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Rails on Docker","tags":["Rails","Docker"],"categories":["programming"],"date":"March 13, 2022","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/2543884e9681765acc3fd0ffffe2b917/1223f/horizontal-logo-monochromatic-white.png","srcSet":"/static/2543884e9681765acc3fd0ffffe2b917/6f368/horizontal-logo-monochromatic-white.png 301w,\n/static/2543884e9681765acc3fd0ffffe2b917/660f0/horizontal-logo-monochromatic-white.png 601w,\n/static/2543884e9681765acc3fd0ffffe2b917/1223f/horizontal-logo-monochromatic-white.png 1202w","sizes":"(min-width: 1202px) 1202px, 100vw"},"sources":[{"srcSet":"/static/2543884e9681765acc3fd0ffffe2b917/901aa/horizontal-logo-monochromatic-white.webp 301w,\n/static/2543884e9681765acc3fd0ffffe2b917/0c2e3/horizontal-logo-monochromatic-white.webp 601w,\n/static/2543884e9681765acc3fd0ffffe2b917/19e09/horizontal-logo-monochromatic-white.webp 1202w","type":"image/webp","sizes":"(min-width: 1202px) 1202px, 100vw"}]},"width":1202,"height":309}}},"imageAlt":"Docker"},"id":"5e92911a-24f7-562d-8ecd-9a7391960489","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Rails on Docker\",\n  \"date\": \"2022-03-13T00:00:00.000Z\",\n  \"tags\": [\"Rails\", \"Docker\"],\n  \"categories\": [\"programming\"],\n  \"draft\": false,\n  \"image\": \"./horizontal-logo-monochromatic-white.png\",\n  \"imageAlt\": \"Docker\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The company I work for uses Docker containers, both in development and production,\\nbut the whole things is so abstracted away from the work I do every day as a software developer\\nthat I had never bothered trying to understand exactly what Docker does for me, or\\nhow to run a Rails application with Docker. Until now, that is.\"), mdx(\"p\", null, \"I became curious about Docker while watching some of the latest episodes of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.driftingruby.com/\"\n  }, \"Drifting Ruby\"), \",\\nwhere I saw a few Rails applications running inside a Docker container. Wishing to learn more,\\nI enrolled in a really good class called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.udemy.com/course/hands-on-with-docker-and-docker-compose/\"\n  }, \"Hands on with Docker and Docker Compose\"), \", that taught me the basics\\nof Docker and Docker Compose through dockerizing a very simple Flask application. Having finished that class,\\nI enrolled in another one called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.udemy.com/course/scaling-docker-on-aws/\"\n  }, \"Scaling Docker on AWS\"), \", by the same author. This second class promised to teach the student how to run,\\ndeploy and scale a Rails application inside Docker containers. The class is great and the instructor is awesome, but my only one frustration was the fact that the Dockerfile for the example\\napplication starts from a Docker image for Rails 4. There are no existing official Docker images for newer Rails versions. Instead, you are instructed to begin from a\\nRuby image while building your Dockerfile.\"), mdx(\"p\", null, \"I tried adapting the example in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.docker.com/samples/rails/\"\n  }, \"Docker documentation\"), \" to dockerize a Rails 6 application,\\ninstead of Rails 5, but it didn't go well. Then, I came across the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pragprog.com/titles/ridocker/docker-for-rails-developers/\"\n  }, \"Docker for Rails Developers\"), \" book and followed along\\nusing an image for ruby 2.7, instead of the 2.6 one used in the examples. This actually worked out really well!\"), mdx(\"p\", null, \"First, I had to use Docker to run a bash terminal where I could use Ruby and start a new Rails application. It didn't\\nreally matter if I had that specific version of Ruby installed in my machine or not, since my terminal would be running\\nin a container using an image downloaded from the Docker hub. The use of the -v option would make sure that all the content would be copied to my current directory.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"docker\\u200B\\u200B \\u200B\\u200Brun\\u200B\\u200B \\u200B\\u200B-i\\u200B\\u200B \\u200B\\u200B-t\\u200B\\u200B \\u200B\\u200B--rm\\u200B\\u200B \\u200B\\u200B-v\\u200B\\u200B \\u200B\\u200B${PWD}:/usr/src/app\\u200B\\u200B \\u200B\\u200Bruby:2.7\\u200B\\u200B \\u200B\\u200Bbash\\n\")), mdx(\"p\", null, \"At the terminal prompt, I first installed my desired version of Rails and then created a new application skipping bundle install and tests,\\nbecause I think I'd rather use rspec, instead. Notice that because \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bundle install\"), \" was skipped, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rails webpacker:install\"), \" also never ran.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd\\u200B\\u200B \\u200B\\u200B/usr/src/app\\n\\n\\u200B\\u200Bgem\\u200B\\u200B \\u200B\\u200Binstall\\u200B\\u200B \\u200B\\u200Brails -v 6.1.4.6\\n\\u200B\\u200B\\n\\u200B\\u200Brails\\u200B\\u200B \\u200B\\u200Bnew\\u200B\\u200B \\u200B\\u200Bmyapp\\u200B\\u200B \\u200B\\u200B--skip-test\\u200B\\u200B \\u200B\\u200B--skip-bundle\\n\")), mdx(\"p\", null, \"My Dockerfile ended up very simple:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"FROM ruby:2.7\\n\\nRUN curl https://deb.nodesource.com/setup_12.x | bash\\nRUN curl https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\\nRUN echo \\\"deb https://dl.yarnpkg.com/debian/ stable main\\\" | tee /etc/apt/sources.list.d/yarn.list\\n\\nRUN apt-get update -yqq && apt-get install -yqq --no-install-recommends \\\\\\nnodejs \\\\\\nyarn \\\\\\n&& rm -rf /var/lib/apt/lists/*\\n\\nWORKDIR /usr/src/app\\n\\nCOPY Gemfile* /usr/src/app\\n\\nRUN bundle install\\n\\nCOPY . /usr/src/app\\n\\nCMD\\u200B\\u200B [\\\"bin/rails\\\", \\\"s\\\", \\\"-b\\\", \\\"0.0.0.0\\\"]\\n\")), mdx(\"p\", null, \"With this Dockerfile in place, I was able to build my image and run a Rails server. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"docker\\u200B\\u200B \\u200B\\u200Bbuild\\u200B\\u200B \\u200B\\u200B-t\\u200B\\u200B \\u200B\\u200Brailsapp\\u200B\\u200B\\n\\n\\u200B\\u200Bdocker\\u200B\\u200B \\u200B\\u200Brun\\u200B\\u200B \\u200B\\u200B-p\\u200B\\u200B \\u200B\\u200B3000:3000\\u200B\\u200B \\u200B\\u200Brailsapp\\u200B\\u200B\\n\\n\")), mdx(\"p\", null, \"I then created a simple docker-compose.yml file for my application\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"version: '3'\\n\\nservices:\\n  web:\\n    build: .\\n    ports:\\n      - \\\"3000:3000\\\"\\n    volumes:\\n      - .:/usr/src/app\\n\")), mdx(\"p\", null, \"And with that file in place, I was able to start my Rails server with a simple command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"docker-compose up\\n\")), mdx(\"p\", null, \"I noticed, however, that webpacker was missing. At first, I thought that perhaps I had to include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RUN rails webpacker:install\"), \" in the Dockerfile,\\nperhaps right after \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bundle install\"), \". This didn't work out. The problem appeared to be that all the files webpacker needed to run were not there. So,\\nI removed that instruction from the Dockerfile and proceeded to install webpacker by running a command in a disposable container.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"docker-compose run --rm web bundle exec rails webpacker:install\\n\")), mdx(\"p\", null, \"The previous command installed webpacker successfully, but running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose up\"), \" again started my Rails server,\\nstill without webpacker running. Searching around for some information helped me realize that I needed to add webpacker as a service in my docker-compose.yml,\\nso the server could be started and mapped to port 3035, because webpacker usually runs on localhost:3035. My application then would have two services: web and\\nwebpack. This is the latest version of my docker-compose.yml file.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"version: '3'\\n\\nservices:\\n  web:\\n    build: .\\n    ports:\\n      - \\\"3000:3000\\\"\\n    environment:\\n      WEBPACKER_DEV_SERVER_HOST: webpack\\n    depends_on:\\n      - webpack\\n    volumes:\\n      - .:/usr/src/app:cached\\n  \\n  webpack:\\n    build: .\\n    command: bundle exec bin/webpack-dev-server\\n    volumes:\\n      - .:/usr/src/app\\n    ports:\\n      - '3035:3035'\\n    environment:\\n      NODE_ENV: development\\n      RAILS_ENV: development\\n      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0\\n\")), mdx(\"p\", null, \"Now running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose up\"), \" will start both services, thanks to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"depends_on\"), \" property.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":2,"slug":"rails-on-docker/"},"allMdx":{"edges":[{"next":{"slug":"2013-03-17-silicon-valley-devfest/","frontmatter":{"title":"Silicon Valley DevFest"},"id":"edcdad98-0f1c-5f08-b9bf-ef2584a6784d"},"previous":null,"node":{"id":"3378703f-653c-58fd-a11e-7adc675fb79e","frontmatter":{"title":"Makings of a Pythonista"},"slug":"2012-11-21-makings-of-a-pythonista"}},{"next":{"slug":"2015-06-14-in-search-of-a-faster-query","frontmatter":{"title":"In search of a faster query"},"id":"c6497654-5ee0-5b14-b735-e08bbbc6a4bf"},"previous":{"frontmatter":{"title":"Makings of a Pythonista"},"slug":"2012-11-21-makings-of-a-pythonista"},"node":{"id":"edcdad98-0f1c-5f08-b9bf-ef2584a6784d","frontmatter":{"title":"Silicon Valley DevFest"},"slug":"2013-03-17-silicon-valley-devfest/"}},{"next":{"slug":"2015-11-01-diary-of-a-dev-joys-of-building","frontmatter":{"title":"Diary of a Junior Dev: The joys of building"},"id":"ca6c84a6-3aea-5278-bf26-267d43acb227"},"previous":{"frontmatter":{"title":"Silicon Valley DevFest"},"slug":"2013-03-17-silicon-valley-devfest/"},"node":{"id":"c6497654-5ee0-5b14-b735-e08bbbc6a4bf","frontmatter":{"title":"In search of a faster query"},"slug":"2015-06-14-in-search-of-a-faster-query"}},{"next":{"slug":"2016-12-24-working-with-d3-based-chart-library/","frontmatter":{"title":"TIL: Working with a D3 based chart library"},"id":"776dcc9f-2ac4-511a-a9c6-982c226e0478"},"previous":{"frontmatter":{"title":"In search of a faster query"},"slug":"2015-06-14-in-search-of-a-faster-query"},"node":{"id":"ca6c84a6-3aea-5278-bf26-267d43acb227","frontmatter":{"title":"Diary of a Junior Dev: The joys of building"},"slug":"2015-11-01-diary-of-a-dev-joys-of-building"}},{"next":{"slug":"2017-03-15-react-conf-2017/","frontmatter":{"title":"React Conf 2017"},"id":"97c0196c-f0cd-5d6a-b2b9-fd3c6f1f1baa"},"previous":{"frontmatter":{"title":"Diary of a Junior Dev: The joys of building"},"slug":"2015-11-01-diary-of-a-dev-joys-of-building"},"node":{"id":"776dcc9f-2ac4-511a-a9c6-982c226e0478","frontmatter":{"title":"TIL: Working with a D3 based chart library"},"slug":"2016-12-24-working-with-d3-based-chart-library/"}},{"next":{"slug":"2017-04-12-the-initial-state-gotcha","frontmatter":{"title":"The Initial State Gotcha"},"id":"82041731-cb81-571d-958c-00f57d99b927"},"previous":{"frontmatter":{"title":"TIL: Working with a D3 based chart library"},"slug":"2016-12-24-working-with-d3-based-chart-library/"},"node":{"id":"97c0196c-f0cd-5d6a-b2b9-fd3c6f1f1baa","frontmatter":{"title":"React Conf 2017"},"slug":"2017-03-15-react-conf-2017/"}},{"next":{"slug":"2017-05-13-blue-socks-at-orange/","frontmatter":{"title":"Blue Socks Spotted at Orange"},"id":"893cf729-88c0-5706-bcb8-d14f75a30f2b"},"previous":{"frontmatter":{"title":"React Conf 2017"},"slug":"2017-03-15-react-conf-2017/"},"node":{"id":"82041731-cb81-571d-958c-00f57d99b927","frontmatter":{"title":"The Initial State Gotcha"},"slug":"2017-04-12-the-initial-state-gotcha"}},{"next":{"slug":"learning-gatsby/","frontmatter":{"title":"Learning about Gatsby"},"id":"9a370e4e-c279-5fe6-bd67-96e83d07e388"},"previous":{"frontmatter":{"title":"The Initial State Gotcha"},"slug":"2017-04-12-the-initial-state-gotcha"},"node":{"id":"893cf729-88c0-5706-bcb8-d14f75a30f2b","frontmatter":{"title":"Blue Socks Spotted at Orange"},"slug":"2017-05-13-blue-socks-at-orange/"}},{"next":{"slug":"once-upon-a-blog/","frontmatter":{"title":"Once upon a Blog"},"id":"db5caf55-934b-5de1-aa6b-5a2078e4f869"},"previous":{"frontmatter":{"title":"Blue Socks Spotted at Orange"},"slug":"2017-05-13-blue-socks-at-orange/"},"node":{"id":"9a370e4e-c279-5fe6-bd67-96e83d07e388","frontmatter":{"title":"Learning about Gatsby"},"slug":"learning-gatsby/"}},{"next":{"slug":"story-of-a-laptop-upgrade","frontmatter":{"title":"Story of a laptop upgrade"},"id":"91dabe95-0227-5d01-b1d1-f10959c5d43a"},"previous":{"frontmatter":{"title":"Learning about Gatsby"},"slug":"learning-gatsby/"},"node":{"id":"db5caf55-934b-5de1-aa6b-5a2078e4f869","frontmatter":{"title":"Once upon a Blog"},"slug":"once-upon-a-blog/"}},{"next":{"slug":"the-code-we-write-today/","frontmatter":{"title":"The code we write today"},"id":"08584458-be98-53c2-8cf3-9fa51060e04b"},"previous":{"frontmatter":{"title":"Once upon a Blog"},"slug":"once-upon-a-blog/"},"node":{"id":"91dabe95-0227-5d01-b1d1-f10959c5d43a","frontmatter":{"title":"Story of a laptop upgrade"},"slug":"story-of-a-laptop-upgrade"}},{"next":{"slug":"rails-on-docker/","frontmatter":{"title":"Rails on Docker"},"id":"5e92911a-24f7-562d-8ecd-9a7391960489"},"previous":{"frontmatter":{"title":"Story of a laptop upgrade"},"slug":"story-of-a-laptop-upgrade"},"node":{"id":"08584458-be98-53c2-8cf3-9fa51060e04b","frontmatter":{"title":"The code we write today"},"slug":"the-code-we-write-today/"}},{"next":{"slug":"rails-on-docker-part-two/","frontmatter":{"title":"Rails on Docker Part Two"},"id":"534e725d-71be-5e6f-ace7-75db51185701"},"previous":{"frontmatter":{"title":"The code we write today"},"slug":"the-code-we-write-today/"},"node":{"id":"5e92911a-24f7-562d-8ecd-9a7391960489","frontmatter":{"title":"Rails on Docker"},"slug":"rails-on-docker/"}},{"next":null,"previous":{"frontmatter":{"title":"Rails on Docker"},"slug":"rails-on-docker/"},"node":{"id":"534e725d-71be-5e6f-ace7-75db51185701","frontmatter":{"title":"Rails on Docker Part Two"},"slug":"rails-on-docker-part-two/"}}]}},"pageContext":{"id":"5e92911a-24f7-562d-8ecd-9a7391960489","slug":"rails-on-docker/","__params":{"slug":"rails-on-docker"}}},
    "staticQueryHashes": ["2201243204","2744905544"]}