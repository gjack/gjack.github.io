{"version":3,"file":"component---src-templates-blog-js-0ed75c88724001fad2dd.js","mappings":"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","sources":["webpack://gabijack/./src/components/categories_list.js","webpack://gabijack/./src/components/tags_list.js","webpack://gabijack/./src/templates/blog.js","webpack://gabijack/./src/images/log-management-fundamentals.png"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Grid, Box } from \"theme-ui\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { kebabCase } from \"lodash\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFolderOpen } from \"@fortawesome/free-solid-svg-icons\"\n\nconst CategoriesList = () => {\n  const { allMdx } = useStaticQuery(graphql`\n    {\n      allMdx {\n        group(field: frontmatter___categories) {\n          totalCount\n          fieldValue\n        }\n      }\n    }\n  `)\n  const categories = allMdx.group\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#328cc1\",\n        p: \"1rem\",\n        borderRadius: \"0.5rem\",\n        my: \"2rem\",\n      }}\n    >\n      <h3>\n        <FontAwesomeIcon\n          icon={faFolderOpen}\n          size={\"lg\"}\n          sx={{ mx: \"0.5rem\" }}\n        />\n        Categories\n      </h3>\n      <ul\n        sx={{\n          listStyle: \"none\",\n          m: 0,\n          px: 2,\n          py: 3,\n        }}\n      >\n        <Grid gap={3} columns={[2, null, 2]}>\n          {categories.map((category) => (\n            <Box\n              key={category.fieldValue}\n              sx={{\n                textAlign: \"center\",\n                padding: \"0\",\n              }}\n            >\n              <li key={category.fieldValue}>\n                <Link\n                  to={`/categories/${kebabCase(category.fieldValue)}/`}\n                  key={category.fieldValue}\n                  sx={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"#1d2731\",\n                    \":visited\": { color: \"#1d2731\" },\n                    \":hover\": { color: \"#d9b310\" },\n                  }}\n                >\n                  {category.fieldValue}\n                </Link>\n              </li>\n            </Box>\n          ))}\n        </Grid>\n      </ul>\n    </Box>\n  )\n}\n\nexport default CategoriesList\n","/** @jsx jsx */\nimport { jsx, Grid, Box } from \"theme-ui\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { kebabCase } from \"lodash\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\"\n\nconst TagsList = () => {\n  const { allMdx } = useStaticQuery(graphql`\n    {\n      allMdx {\n        group(field: frontmatter___tags) {\n          totalCount\n          fieldValue\n        }\n      }\n    }\n  `)\n  const tags = allMdx.group\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#328cc1\",\n        p: \"1rem\",\n        borderRadius: \"0.5rem\",\n        my: \"2rem\",\n      }}\n    >\n      <h3>\n        <FontAwesomeIcon icon={faTags} size={\"lg\"} sx={{ mx: \"0.5rem\" }} />\n        Tags\n      </h3>\n      <ul\n        sx={{\n          listStyle: \"none\",\n          m: 0,\n          px: 2,\n          py: 3,\n        }}\n      >\n        <Grid gap={3} columns={[2, null, 2]}>\n          {tags.map((tag) => (\n            <Box\n              key={tag.fieldValue}\n              sx={{\n                textAlign: \"center\",\n                padding: \"0\",\n              }}\n            >\n              <li key={tag.fieldValue}>\n                <Link\n                  to={`/tags/${kebabCase(tag.fieldValue)}/`}\n                  key={tag.fieldValue}\n                  sx={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"#1d2731\",\n                    \":visited\": { color: \"#1d2731\" },\n                    \":hover\": { color: \"#d9b310\" },\n                  }}\n                >\n                  {tag.fieldValue}\n                </Link>\n              </li>\n            </Box>\n          ))}\n        </Grid>\n      </ul>\n    </Box>\n  )\n}\n\nexport default TagsList\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { graphql, Link } from \"gatsby\"\nimport { Themed } from \"@theme-ui/mdx\"\nimport { Image } from \"theme-ui\"\nimport TagsList from \"../components/tags_list\"\nimport CategoriesList from \"../components/categories_list\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faClock, faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\"\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\"\nimport LogsBadge from \"../images/log-management-fundamentals.png\"\n\nconst Blog = ({ pageContext, data }) => {\n  const posts = data.allMdx.nodes\n  const { currentPage, numPages } = pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"/blog\" : `/blog/${currentPage - 1}`\n  const nextPage = `/blog/${currentPage + 1}`\n\n  return (\n    <Layout>\n      <Seo title={\"Blog\"} />\n      <main\n        sx={{\n          display: \"grid\",\n          gridGap: 4,\n          gridTemplateColumns: [\"auto\", \"1fr 256px\"],\n        }}\n      >\n        <div sx={{ textAlign: \"justify\" }}>\n          <Themed.h2 sx={{ px: 3 }}>Recent posts</Themed.h2>\n          <ul\n            sx={{\n              listStyle: \"none\",\n              m: 0,\n              px: 3,\n              py: 4,\n            }}\n          >\n            {posts.map((post) => (\n              <li\n                key={post.id}\n                sx={{\n                  mb: 4,\n                }}\n              >\n                <Themed.h3\n                  sx={{\n                    m: 0,\n                  }}\n                >\n                  <Link\n                    to={`/blog/${post.slug}`}\n                    key={post.id}\n                    sx={{\n                      color: \"inherit\",\n                      textDecoration: \"none\",\n                      \":hover,:focus\": {\n                        color: \"#d9b310\",\n                      },\n                    }}\n                  >\n                    {post.frontmatter.title}\n                  </Link>\n                </Themed.h3>\n                <div sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                  <small sx={{ fontWeight: \"bold\" }}>\n                    <FontAwesomeIcon icon={faCalendarAlt} />\n                    <span sx={{ mx: \"0.5rem\" }}>{post.frontmatter.date}</span>\n                  </small>\n                  <small>\n                    <FontAwesomeIcon icon={faClock} />\n                    <span sx={{ mx: \"0.5rem\" }}>{`${post.timeToRead} ${\n                      post.timeToRead === 1 ? \"minute\" : \"minutes\"\n                    }`}</span>\n                  </small>\n                </div>\n                <Themed.p>{post.excerpt}</Themed.p>\n              </li>\n            ))}\n          </ul>\n          <div sx={{ display: \"flex\", flexDirection: \"row\" }}>\n            {!isFirst && (\n              <Link\n                to={prevPage}\n                rel=\"prev\"\n                sx={{\n                  textAlign: \"left\",\n                  color: \"#0b3c5d\",\n                  fontWeight: \"bold\",\n                  textDecoration: \"none\",\n                  \":visited\": {\n                    color: \"#0b3c5d\",\n                  },\n                  \":hover\": {\n                    color: \"#d9b310\",\n                  },\n                }}\n              >\n                <FontAwesomeIcon icon={faArrowLeft} size={\"lg\"} />\n                <span sx={{ mx: \"0.5rem\" }}>Previous Page</span>\n              </Link>\n            )}\n            {numPages > 1 &&\n              Array.from({ length: numPages }, (_, i) => (\n                <Link\n                  key={`pagination-number${i + 1}`}\n                  to={`/blog/${i === 0 ? \"\" : i + 1}`}\n                  sx={{\n                    textDecoration: \"none\",\n                    color: \"#0b3c5d\",\n                    \":visited\": {\n                      color: \"#0b3c5d\",\n                    },\n                    \":hover\": {\n                      color: \"#d9b310\",\n                    },\n                  }}\n                >\n                  <div\n                    sx={{\n                      textAlign: \"center\",\n                      width: \"2rem\",\n                      height: \"2rem\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    {i + 1}\n                  </div>\n                </Link>\n              ))}\n            {!isLast && (\n              <Link\n                to={nextPage}\n                rel=\"next\"\n                sx={{\n                  textAlign: \"right\",\n                  color: \"#0b3c5d\",\n                  fontWeight: \"bold\",\n                  textDecoration: \"none\",\n                  \":visited\": {\n                    color: \"#0b3c5d\",\n                  },\n                  \":hover\": {\n                    color: \"#d9b310\",\n                  },\n                }}\n              >\n                <span sx={{ mx: \"0.5rem\" }}>Next Page</span>\n                <FontAwesomeIcon icon={faArrowRight} size={\"lg\"} />\n              </Link>\n            )}\n          </div>\n        </div>\n        <aside>\n          <CategoriesList />\n          <TagsList />\n          <a href=\"https://www.credly.com/badges/c654ccd6-00e5-4417-bbc2-06ef46429db4/public_url\">\n          <Image\n          src={LogsBadge}\n          alt={\"Datadog Logs Management Badge\"}\n          sx={{\n            padding: \"5px\",\n            marginTop: \"3rem\",\n          }}\n        />\n        </a>\n        </aside>\n      </main>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        id\n        slug\n        excerpt(truncate: true, pruneLength: 150)\n        timeToRead\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n      }\n      totalCount\n    }\n  }\n`\nexport default Blog\n","export default __webpack_public_path__ + \"static/log-management-fundamentals-4038f7d60b7d64497e61f5b3a0319ae0.png\";"],"names":["categories","useStaticQuery","allMdx","group","sx","backgroundColor","p","borderRadius","my","icon","faFolderOpen","size","mx","listStyle","m","px","py","gap","columns","map","category","key","fieldValue","textAlign","padding","Link","to","textDecoration","fontWeight","color","tags","faTags","tag","pageContext","posts","data","nodes","currentPage","numPages","isFirst","isLast","prevPage","nextPage","title","display","gridGap","gridTemplateColumns","post","id","mb","slug","frontmatter","flexDirection","faCalendarAlt","date","faClock","timeToRead","excerpt","rel","faArrowLeft","Array","from","length","_","i","width","height","faArrowRight","href","src","LogsBadge","alt","marginTop"],"sourceRoot":""}